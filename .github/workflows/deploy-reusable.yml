# Reusable Workflow - 다른 프로젝트에서 재사용 가능
name: Deploy to one-q.xyz (Reusable)

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
        description: 'PM2 app name (e.g., misopin-cms)'
      app_port:
        required: true
        type: string
        description: 'Application port (e.g., 3001)'
      deploy_path:
        required: true
        type: string
        description: 'Server deployment path (e.g., /var/www/misopin-cms)'
      health_check_url:
        required: false
        type: string
        default: ''
        description: 'Health check URL (optional)'
    secrets:
      SERVER_HOST:
        required: true
      SERVER_USER:
        required: true
      SERVER_SSH_KEY:
        required: true
      DATABASE_URL:
        required: true
      JWT_SECRET:
        required: true
      NEXTAUTH_SECRET:
        required: true
      NEXTAUTH_URL:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

      - name: Deploy standalone build to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # Create directories
            mkdir -p ${{ inputs.deploy_path }}/.next/standalone/.next
            mkdir -p ${{ inputs.deploy_path }}/.next/standalone/public

      - name: Deploy .next/standalone build
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr --delete
          path: .next/standalone/.next/
          remote_path: ${{ inputs.deploy_path }}/.next/standalone/.next/
          remote_host: ${{ secrets.SERVER_HOST }}
          remote_user: ${{ secrets.SERVER_USER }}
          remote_key: ${{ secrets.SERVER_SSH_KEY }}

      - name: Deploy .next/static files
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr
          path: .next/static/
          remote_path: ${{ inputs.deploy_path }}/.next/standalone/.next/static/
          remote_host: ${{ secrets.SERVER_HOST }}
          remote_user: ${{ secrets.SERVER_USER }}
          remote_key: ${{ secrets.SERVER_SSH_KEY }}

      - name: Deploy public files
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr
          path: public/
          remote_path: ${{ inputs.deploy_path }}/.next/standalone/public/
          remote_host: ${{ secrets.SERVER_HOST }}
          remote_user: ${{ secrets.SERVER_USER }}
          remote_key: ${{ secrets.SERVER_SSH_KEY }}

      - name: Deploy server files (package.json, server.js, etc)
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr --include='package.json' --include='package-lock.json' --include='prisma/' --include='lib/' --include='scripts/' --exclude='*'
          path: ./
          remote_path: ${{ inputs.deploy_path }}/
          remote_host: ${{ secrets.SERVER_HOST }}
          remote_user: ${{ secrets.SERVER_USER }}
          remote_key: ${{ secrets.SERVER_SSH_KEY }}

      - name: Setup uploads symlink for static site
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # Create symbolic link for uploads folder (for popups and board images)
            ln -sf /var/www/misopin-cms/public/uploads /var/www/misopin.com/uploads || echo "Symlink already exists"

      - name: Restart PM2 application
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ${{ inputs.deploy_path }}
            npm install --production
            pm2 restart ${{ inputs.app_name }} || pm2 start ecosystem.config.js
            pm2 save

      - name: Reparse legal documents (if needed)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ${{ inputs.deploy_path }}
            npx tsx scripts/reparse-legal.ts || echo "Legal docs reparse script not found or failed"

      - name: Health check
        if: ${{ inputs.health_check_url != '' }}
        run: |
          sleep 10
          curl -f ${{ inputs.health_check_url }} || exit 1
